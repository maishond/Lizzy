// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  OWNER
  MEMBER
}

model Item {
  id          String    @id @default(uuid())
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  inGameId    String
  slot        Int
  container   Container @relation(fields: [containerId], references: [id], onDelete: Cascade)
  containerId String
  quantity    Int
}

model ItemDiff {
  id              String        @id @unique @default(uuid())
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  itemId          String
  diff            Int
  StorageSystem   StorageSystem @relation(fields: [storageSystemId], references: [id])
  storageSystemId String
}

model StorageSystem {
  id          String        @id @default(uuid())
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  name        String
  containers  Container[]
  members     Member[]
  AccessPoint AccessPoint[]
  ItemDiff    ItemDiff[]
}

model Container {
  id              String        @unique
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  inGameId        String
  type            String
  Item            Item[]
  StorageSystem   StorageSystem @relation(fields: [storageSystemId], references: [id])
  storageSystemId String
  slots           Int
  slotsUsed       Int

  @@id([storageSystemId, inGameId])
}

model AccessPoint {
  id              String        @unique
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  inGameId        String
  StorageSystem   StorageSystem @relation(fields: [storageSystemId], references: [id])
  storageSystemId String
  name            String
  x               Int           @default(0)
  y               Int           @default(0)
  z               Int           @default(0)

  @@id([storageSystemId, inGameId])
}

model User {
  id             String   @id @default(uuid())
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  name           String
  StorageSystems Member[]
}

model Member {
  id              String        @id @default(uuid())
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  role            Roles
  storageSystem   StorageSystem @relation(fields: [storageSystemId], references: [id])
  storageSystemId String
}
